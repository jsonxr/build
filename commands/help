#!/bin/bash

#-----------------------------------------------------------------------------
# Help Description
#-----------------------------------------------------------------------------
if [ "$1" == "--help" ]; then
  echo "b help <cmd> provides verbose help on a specific command."
  exit
fi

# execute help in the following order:  project, dotdir, the commands dir
if [ ! "$1" == "" ]; then
  if [ -f $PROJECTDIR/bin/$1 ]; then
    $PROJECTDIR/bin/$1 --help --verbose
  elif [ -f $DOTDIR/$1 ]; then
    $DOTDIR/$1 --help --verbose
  elif [ -f $BUILDDIR/commands/$1 ]; then
    $BUILDDIR/commands/$1 --help --verbose
  else
    echo "Command $1 not found..."
  fi
  exit
fi


#-----------------------------------------------------------------------------
# Command
#-----------------------------------------------------------------------------

echo "usage: build <command>"
echo

OutputHelp () {
  if [ -d $2 ]; then
    PRE=$(ls $2)
    if [ ! "$PRE" = "" ]; then
      echo "$1"
      echo "-------"
      # Iterate over each script that looks like "setup-*" and execute it
      for i in ${PRE[@]}; do
        # Make sure this is a file, not the examples directory
        if [ -f $2/$i ]; then
          # Get the help description to display, if none returned, it won't show up in the help
          DESCRIPTION=$($2/$i --help)
          if [ ! "$DESCRIPTION" = "" ]; then
            echo "$i - $DESCRIPTION"
          fi
        fi
      done
      echo ""
    fi
  fi
}

#-----------------------------------------------------------------------------
# Build commands
#-----------------------------------------------------------------------------
OutputHelp "general" $BUILDDIR/commands
OutputHelp "~/.b" $DOTDIR
OutputHelp "project" $PROJECTDIR/bin

